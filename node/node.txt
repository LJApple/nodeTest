http--协议
request--浏览器请求
response--服务器输出给浏览器

数据请求：
前台：form ajax jsonp
后台-> 一样不管用什么方法

请求方式“
post get
post 数据接收比get大的多

接口访问：
/user?act=reg$user=aaa$pass=1234
{'ok':false,"msg":""}
http://localhost:8080/pwd

模块化:
1、系统模块：http querystring url
2、自定义模块
3、包管理器

crypto 加密 
Net 网络操作

自定义模块：
require
exports
module
2.引入模块 ./ 不加的话 需要放在node_modules

系统模块和自定义模块的优先级
先从系统模块中找
再从自定义模块 自定义模块放在node_modules

express  中间件只有基础功能
保留了原生的功能
非侵入式：
req

res

3种方法
.get('/',function(){});
.post()
.use()

express-static 读取静态文件

cookie
在浏览器保存一些数据，每次请求都会带过来
1.cookie空间小
2.安全性差

1.精打细算
2教研cookie是否被篡改过
a.发送cookie
res.cookie(名字，值,{path:'/',maxAge:毫秒});
b.读取cookie
cookie-parser

server.use(cookieParser('秘钥'))

server.use(function(){
	req.cookies 未签名版
	req.signedCookies 签名版
});

删除 cookie
clearCookie

cookie-encriypter 加密

session:保存在服务端 安全
session是基于cookie cookie会有一个session的id，服务器利用sessionid
模板引擎

jade-破坏式、侵入式、强依赖

ejs-温和、非侵入式、若依赖